<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, spUtil) {
  /* widget controller */
  var c = this;
	
	// make sure the model is populated with a value
	c.data.enable_slack = c.data.prefs.enable_integration;
	
	c.setPreference = function(value, name) {
		c.server.get({action: 'setPreference', prefName: name, prefValue: value});		
		
	}

	
}

]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel-wrapper {
	margin-bottom: 10px;
}
.panel-proper {
	background-color: #fff;
	border-radius: 5px;
	transition: box-shadow 0.5s;
	position: relative;
}


.preference {
  margin:5px;
}

.preference label {
  margin: 0 15px 0 0 ;
  min-width: 140px;
}

.enablePreference{
  display:block;
  float:left;
  margin-right:20px;
  position:relative;
  top:5px;
}

/* The switch - the box around the slider */
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

/* Hide default HTML checkbox */
.switch input {display:none;}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input {
  width:350px;
}

input:checked + .slider {
  background-color: #2196F3;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 20px;
}

.slider.round:before {
  border-radius: 50%;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>slack-integration-preference</id>
        <internal>false</internal>
        <link/>
        <name>Slack Integration Preference</name>
        <option_schema/>
        <public>false</public>
        <roles>x_snc_sn_slack_int.sn_slack_integration</roles>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

	
	data.prefs = getPreferences();
	
	function getPreferences() {
		var prefs = {};
		
		var gr = new GlideRecord("x_snc_sn_slack_int_preference");		
		gr.query();
		while (gr.next()) {
			prefs[gr.name+''] = gr.value + '';			
			if (prefs[gr.name+''] == "true")
				prefs[gr.name+''] = true;
			else if (prefs[gr.name+''] == "false")
				prefs[gr.name+''] = false;
		}
		
		return prefs;
	}

	
	/********************************************************
	* Process client calls
	*********************************************************/
	
	
	if (input) {
		if (input.action == "setPreference") {
			setPreference(input.prefName, input.prefValue);
		}		
	}	
	
	
	function setPreference(prefName, prefValue) {
		
		var gr = new GlideRecord("x_snc_sn_slack_int_preference");
		gr.addQuery("name", prefName);		
		gr.query();
		if (gr.next()) {
			gr.value = prefValue;
			gr.update();
		} else {
			gr.initialize();
			gr.name = prefName;
			gr.value = prefValue;
			gr.insert();						
		}
		
		return gr;
	}
	
	

	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>aleck.lin</sys_created_by>
        <sys_created_on>2018-03-25 05:45:50</sys_created_on>
        <sys_id>0d24b4b513cd9300ccd656e12244b009</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>Slack Integration Preference</sys_name>
        <sys_package display_value="SN_Slack_Integration" source="x_snc_sn_slack_int">019fa11413099784ccd656e12244b09b</sys_package>
        <sys_policy/>
        <sys_scope display_value="SN_Slack_Integration">019fa11413099784ccd656e12244b09b</sys_scope>
        <sys_update_name>sp_widget_0d24b4b513cd9300ccd656e12244b009</sys_update_name>
        <sys_updated_by>aleck.lin</sys_updated_by>
        <sys_updated_on>2018-03-28 05:48:40</sys_updated_on>
        <template><![CDATA[<div class="panel-wrapper" ng-class="{ 'expanded': c.expanded, 'recovered': (c.alert.state === 'Closed') }">
	<div class="panel-proper">

	<div class="panel panel-default b">
  	<div class="panel-heading">
    	<h4 class="panel-title">Preferences</h4>
	  </div>

	  <div class="panel-body container-fluid form-horizontal">    

      <div>  
        <label class="enablePreference">Enable Slack Integration</label>        
        <label class="switch">        
          <input type="checkbox" ng-model="c.data.enable_slack" ng-click="c.setPreference(c.data.enable_slack,'enable_integration')" ng-checked="c.data.prefs.enable_integration" >
          <span class="slider round"></span>
        </label>      
      </div>
      
      <div class="preference">
        <label>Webhook URL</label>
        <input ng-model="c.data.webhook_url" ng-value="c.data.prefs.webhook_url">
        <button type="button" ng-click="c.setPreference(c.data.webhook_url, 'webhook_url')"> Save</button>        
      </div>

      <div class="preference">
        <label>Username</label>
        <input ng-model="c.data.username" ng-value="c.data.prefs.username">
        <button type="button" ng-click="c.setPreference(c.data.username, 'username')"> Save</button>                
      </div>
   
      <div class="preference">
        <label>Channel</label>
        <input ng-model="c.data.channel" ng-value="c.data.prefs.channel">
        <button type="button" ng-click="c.setPreference(c.data.channel, 'channel')"> Save</button>                        
      </div>
      
      <div class="preference">
        <label>Additional Message</label>
        <input ng-model="c.data.additional_message" ng-value="c.data.prefs.additional_message">
				<button type="button" ng-click="c.setPreference(c.data.additional_message, 'additional_message')"> Save</button>                        
      </div>  
      
      <div class="preference">
        <label>Default Fields Override</label>
        <input ng-model="c.data.fields_override" ng-value="c.data.prefs.fields_override">
				<button type="button" ng-click="c.setPreference(c.data.fields_override, 'fields_override')"> Save</button>                        
      </div>        
      
      <div class="preference">
        <label>Icon</label>
        <input ng-model="c.data.icon" ng-value="c.data.prefs.icon">
				<button type="button" ng-click="c.setPreference(c.data.icon, 'icon')"> Save</button>                        
      </div> 
      
      <div class="preference">
        <label>Icon URL</label>
        <input ng-model="c.data.icon_url" ng-value="c.data.prefs.icon_url">
				<button type="button" ng-click="c.setPreference(c.data.icon_url, 'icon_url')"> Save</button>                        
      </div>       

    </div> <!-- panel-body container-fluid form-horizontal --> 
	</div> <!-- panel panel-default b -->    
        
    
    
  </div><!-- pannel-proper -->
</div> <!-- panel-wrapper --> ]]></template>
    </sp_widget>
</record_update>
